// import React from 'react';
// import styles from './RecommendationsCard.module.css';
// import IconButton from '@mui/material/IconButton';
// import CloseIcon from '@mui/icons-material/Close';

// const RecommendationsCard = ({ ip, onClose }) => {
//   return (
//     <div className={styles.card}>
//       <IconButton className={styles.closeButton} onClick={onClose} size="small">
//         <CloseIcon style={{ color: 'white' }} />
//       </IconButton>
//       <h4>Recommendations for {ip}</h4>
//       <p>
//         Lorem ipsum dolor sit amet, consectetur adipiscing elit, sed do eiusmod tempor incididunt ut labore et dolore magna aliqua.
//       </p>
//       <button className={styles.button}>Download full report</button>
//     </div>
//   );
// };

// export default RecommendationsCard;

// import React, { useEffect, useRef } from 'react';
// import styles from './RecommendationsCard.module.css';
// import IconButton from '@mui/material/IconButton';
// import CloseIcon from '@mui/icons-material/Close';
// import ReactMarkdown from 'react-markdown';
// import html2pdf from 'html2pdf.js';
// import logo from '../../assets/react.svg';

// const RecommendationsCard = ({ ip, data, onClose }) => {
//   const cardRef = useRef();

//   const summary = data?.ai_analysis || 'No AI analysis found.';

//   const handlePDFDownload = () => {
//     if (!cardRef.current) return;

//     const timestamp = new Date().toISOString().replace(/[:.]/g, '-');

//     html2pdf()
//       .set({
//         margin: 0.5,
//         filename: `${ip}_recommendation_${timestamp}.pdf`,
//         image: { type: 'jpeg', quality: 0.98 },
//         html2canvas: { scale: 2 },
//         jsPDF: { unit: 'in', format: 'a4', orientation: 'portrait' },
//       })
//       .from(cardRef.current)
//       .save();
//   };

//   return (
//     <div className={styles.card} ref={cardRef}>
//       {/* Close Button */}
//       <IconButton className={styles.closeButton} onClick={onClose} size="small">
//         <CloseIcon style={{ color: 'white' }} />
//       </IconButton>

//       {/* Logo and Header */}
//       <div className={styles.pdfHeader}>
//         <img src={logo} alt="Logo" className={styles.logo} />
//         <h2>ISP Bandwidth Recommendations</h2>
//         <p><strong>IP:</strong> {ip}</p>
//       </div>

//       {/* Markdown Content */}
//       <div className={styles.markdown}>
//         <ReactMarkdown>{summary}</ReactMarkdown>
//       </div>

//       {/* Footer */}
//       <div className={styles.pdfFooter}>
//         <p>Generated by AI Engine | © AI Team 2025</p>
//       </div>

//       {/* Button Group (Hidden in PDF) */}
//       <div className={styles.buttonGroup}>
//         <button className={styles.button} onClick={handlePDFDownload}>
//           Download PDF Report
//         </button>
//       </div>
//     </div>
//   );
// };

// export default RecommendationsCard;



import React, { useRef } from 'react';
import styles from './RecommendationsCard.module.css';
import IconButton from '@mui/material/IconButton';
import CloseIcon from '@mui/icons-material/Close';
import ReactMarkdown from 'react-markdown';
import html2pdf from 'html2pdf.js';
import logo from '../../assets/linkeye_logo 1.png';

const RecommendationsCard = ({ ip, data, onClose }) => {
  const cardRef = useRef();
  const summary = data?.ai_analysis?.trim() || 'No recommendations available.';

  const handlePDFDownload = () => {
    if (!cardRef.current) return;

    const timestamp = new Date().toISOString().replace(/[:.]/g, '-');

    // Temporarily hide elements before rendering PDF
    const buttonGroup = cardRef.current.querySelector(`.${styles.buttonGroup}`);
    const closeButton = cardRef.current.querySelector(`.${styles.closeButton}`);
    if (buttonGroup) buttonGroup.style.display = 'none';
    if (closeButton) closeButton.style.display = 'none';

    html2pdf()
      .set({
        margin: [0.5, 0.1, 0., 0.1],
        filename: `${ip}_recommendation_${timestamp}.pdf`,
        pagebreak: { mode: ['avoid-all', 'css', 'legacy'] },
        html2canvas: {
          scale: 2,
          useCORS: true,
          scrollY: 0
        },
        jsPDF: { unit: 'in', format: 'letter', orientation: 'portrait' },
      })
      .from(cardRef.current)
      .save()
      .then(() => {
        // Show them again after saving
        if (buttonGroup) buttonGroup.style.display = 'flex';
        if (closeButton) closeButton.style.display = 'block';
      });
  };

  return (
    <div className={styles.card} ref={cardRef}>
      {/* Header */}
      <div className={styles.header}>
        <IconButton className={styles.closeButton} onClick={onClose} size="small">
          <CloseIcon />
        </IconButton>
        <h2 className={styles.title}>ISP Bandwidth Report</h2>
        <img src={logo} alt="Logo" className={styles.logo} />
      </div>

      {/* IP Address */}
      <p className={styles.ip}><strong>IP:</strong> {ip}</p>

      {/* Markdown Content */}
      <div className={styles.markdown}>
        <ReactMarkdown>{summary}</ReactMarkdown>
      </div>

      {/* Footer */}
      <div className={styles.footer}>
        Generated by AI Engine | © AI Team 2025
      </div>

      {/* Button */}
      <div className={styles.buttonGroup}>
        <button className={styles.button} onClick={handlePDFDownload}>
          Download PDF Report
        </button>
      </div>
    </div>
  );
};

export default RecommendationsCard;
